{"version":3,"sources":["components/navbar/navbar.js","components/jumbotron/jumbotron.js","components/searchform/searchform.js","components/results/result.js","components/resultcontainer/resultContainer.js","pages/search.js","components/saved/saved.js","components/savedcontainer/savedContainer.js","pages/saved.js","utils/API.js","App.js","serviceWorker.js","index.js"],"names":["Nav","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","to","Jumbotron","SearchForm","props","onSubmit","handleFormSubmit","htmlFor","value","searchTerm","onChange","handleInputChange","name","Results","book","title","authors","thumbnail","description","link","onClick","axios","post","catch","error","console","log","handleSave","src","alt","rel","href","target","ResultsList","BookList","booklist","map","index","key","volumeInfo","imageLinks","infoLink","Search","Saved","_id","getBooks","deletePath","delete","then","result","message","handleDelete","SavedList","getSavedBooks","SavedBooks","state","savedBooks","getSavedBooksFromDB","get","results","savedResults","data","setState","this","Component","query","App","event","preventDefault","API","searchresult","items","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9992ebe3.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Nav() {\n  return (\n    <div>\n      <nav className=\"navbar navbar-dark bg-dark navbar-expand-lg\">\n        <span className=\"navbar-brand mb-0 h1\">React Google Book Search</span>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNav\"\n          aria-controls=\"navbarNav\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle Navigation\"\n        ></button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item active\">\n              <button className=\"nav-item btn btn-light mb-0 mr-3\">\n                <Link to=\"/\">\n                  Search <span className=\"sr-only\">(current)</span>\n                </Link>\n              </button>\n            </li>\n            <li className=\"nav-item\">\n              <button className=\"nav-item btn btn-light mb-0 text-white\">\n                <Link to=\"/saved\">Saved</Link>\n              </button>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </div>\n  );\n}\n\nexport default Nav;","import React from \"react\";\nimport \"./jumbotron.css\"\n\nfunction Jumbotron() {\n    return(\n        <div className=\"container\">\n            <div className=\"jumbotron bg-dark jumbotron-fluid mb-0\">\n                <h1 className=\"display-3 text-center text-white\">(React) Google Books Search</h1>\n                <p className=\"text-center h3 text-white\">This is a React Application that utilizes Google Books API for users to search and save for any book ever published.</p>\n            </div>\n        </div>\n    )\n\n};\n\nexport default Jumbotron;\n\n","import React from \"react\";\nimport \"./searchform.css\"\n\nfunction SearchForm(props) {\n    return(\n      <div className=\"container\">\n      <form\n        className=\"mt-2 p-2 border border-dark bg-dark\"\n        onSubmit={props.handleFormSubmit}>\n        <div className=\"form-group font\">\n          <h1>Search for a Book</h1>\n          <hr />\n          <label htmlFor=\"searchBar\" className=\"mr-1 font\">\n            Search Here...\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"searchBar\"\n            value={props.searchTerm}\n            onChange={props.handleInputChange}\n            name=\"searchTerm\"\n          ></input>\n        </div>\n        <button type=\"submit\" className=\"btn btn-dark\">\n          Search\n        </button>\n      </form>\n    </div>\n    );\n}\n\nexport default SearchForm;\n\n","import React from \"react\";\nimport axios from \"axios\";\n\n\nfunction Results(props) {\n\n\n  const book = {\n    title: props.title,\n    authors: props.authors,\n    thumbnail: props.thumbnail,\n    description: props.description,\n    link: props.link,\n  };\n\n  const handleSave = (book) => {\n    axios\n      .post(\"/api/books\", book)\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const thumbnail = props.thumbnail;\n  const description = props.description;\n  const link = props.link;\n  const title = props.title;\n  const authors = props.authors;\n\n  return (\n    <div className=\"card card-fluid mt-2 bg-dark text-white\">\n      <h1 className=\"card-header\">{title}<button\n        type=\"button\"\n        className=\"btn btn-sm btn-light float-right\"\n        onClick={() => handleSave(book)}\n      >\n        Save\n            </button>\n      </h1>\n      <div className=\"card-body\">\n        <img src={thumbnail} alt=\"book\" className=\"float-left mr-2\"></img>\n        <p className=\"\">Authors: {authors}</p>\n        <p>Description: {description}</p>\n        <a rel=\"noopener noreferrer\" href={link} target=\"_blank\">\n          Link: {link}\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default Results;","import React from \"react\";\nimport Results from \"../results/result\";\n\nfunction ResultsList(props) {\n  const BookList = props.booklist;\n  return (\n    <div className=\"container-fluid\">\n      {BookList.map((book, index) => (\n        <Results\n          key={index}\n          title={book.volumeInfo.title}\n          authors={book.volumeInfo.authors}\n          description={book.volumeInfo.description}\n          thumbnail={book.volumeInfo.imageLinks.thumbnail}\n          link={book.volumeInfo.infoLink}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default ResultsList;","import React from \"react\";\nimport SearchForm from \"../components/searchform/searchform\"\nimport ResultsList from \"../components/resultcontainer/resultContainer\"\n\nfunction Search(props) {\n    return (\n      <div>\n        <SearchForm\n          searchTerm={props.searchTerm}\n          handleInputChange={props.handleInputChange}\n          handleFormSubmit={props.handleFormSubmit}\n        />\n        <ResultsList booklist={props.booklist}/>\n      </div>\n    );\n  }\n\nexport default Search;","import React from \"react\";\nimport axios from \"axios\";\n\n\nfunction Saved(props) {\n\n  const id = props._id;\n  const getBooks = props.getBooks;\n\n  const handleDelete = (id) => {\n    const deletePath = `/api/books/${id}`;\n    axios\n      .delete(deletePath)\n      .then((result) => {\n        getBooks();\n      })\n      .catch((error) => {\n        console.log(error.message);\n      });\n  };\n\n  return (\n    <div className=\"card card-fluid mt-2 bg-dark text-white\">\n      <h1 className=\"card-header\">\n        {props.title}\n        <button\n          type=\"button\"\n          className=\"btn btn-sm btn-danger float-right mr-2\"\n          onClick={() => handleDelete(id)}\n        >\n          Delete\n        </button>\n      </h1>\n      <div className=\"card-body\">\n        <img src={props.thumbnail} alt=\"book\" className=\"float-left mr-2\"></img>\n        <p className=\"\">Authors: {props.authors}</p>\n        <p>Synopsis: {props.description}</p>\n        <a rel=\"noopener noreferrer\" href={props.link} target=\"_blank\">\n          Link: {props.link}\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default Saved;","import React from \"react\";\nimport Saved from \"../saved/saved\";\n\nfunction SavedList(props) {\n  const BookList = props.booklist;\n  const getBooks = props.getSavedBooks;\n  return (\n    <div className=\"container-fluid\">\n      {BookList.map((book, index) => (\n        <Saved\n          key={index}\n          title={book.title}\n          authors={book.authors}\n          description={book.description}\n          thumbnail={book.thumbnail}\n          link={book.link}\n          id={book._id}\n          getBooks={getBooks}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default SavedList;","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport SavedList from \"../components/savedcontainer/savedContainer\"\n\nclass SavedBooks extends Component {\n    state = {\n      savedBooks: [],\n    };\n  \n    componentDidMount() {\n      this.getSavedBooksFromDB();\n    }\n  \n    getSavedBooksFromDB = () => {\n      axios\n        .get(\"/api/saved-books\")\n        .then((results) => {\n          const savedResults = results.data;\n          this.setState({ savedBooks: savedResults });\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    };\n  \n    render() {\n      return (\n        <div className=\"container-fluid\">\n          <SavedList\n            booklist={this.state.savedBooks}\n            getSavedBooks={this.getSavedBooksFromDB}\n          />\n        </div>\n      );\n    }\n  }\n  \n  export default SavedBooks;\n","import axios from \"axios\";\n//how do I get dotenv to work? this exposes my apikey, but it won't read from .env for some reason\nconst URL = \"https://www.googleapis.com/books/v1/volumes?q=\";\nconst APIKEY = \"&key=AIzaSyDjdVY0ifwRRWZ9ixagxcxa46IHZZcWj-U\";\n\nexport default {\n  search: function (query) {\n    return axios.get(URL + query + APIKEY);\n  },\n};\n\n","import React, { Component }  from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Nav from \"./components/navbar/navbar\";\nimport Jumbotron from \"./components/jumbotron/jumbotron\"\nimport Search from \"./pages/search\"\nimport Saved from \"./pages/saved\"\nimport API from \"../src/utils/API\";\nimport \"./App.css\"\n\n\nclass App extends Component {\n  state = {\n    searchTerm: \"\",\n    booklist: [],\n  };\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    API.search(this.state.searchTerm).then((result) => {\n      const searchresult = result.data.items;\n      this.setState({ booklist: searchresult, searchTerm: \"\" });\n    });\n  };\n\n  handleInputChange = (event) => {\n    const value = event.target.value;\n    this.setState({\n      searchTerm: value,\n    });\n  };\n\n  render(){\n    return (\n      <Router>\n        <div>\n          <Nav />\n          <header className=\"background-image\">\n          <Jumbotron />\n          <Switch>\n            <Route exact path=\"/\">\n              <Search \n              searchTerm={this.state.searchTerm}\n              handleInputChange={this.handleInputChange}\n              handleFormSubmit={this.handleFormSubmit}\n              booklist={this.state.booklist}\n              />\n            </Route>\n            <Route path=\"/saved\">\n              <Saved />\n            </Route>\n          </Switch>\n          </header>\n        </div>\n      </Router>\n    );\n  }\n\n};\n\n\nexport default App;\n  \n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}